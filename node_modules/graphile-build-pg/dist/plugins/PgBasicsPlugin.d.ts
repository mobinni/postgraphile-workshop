import "graphile-build";
import "./PgTablesPlugin.js";
import "../interfaces.js";
import "graphile-config";
import type { PgCodec, PgCodecAttribute, PgCodecRef, PgCodecRelation, PgRefDefinition, PgResource, PgResourceUnique } from "@dataplan/pg";
import type { GraphQLType } from "graphql";
import sql from "pg-sql2";
import { getBehavior } from "../behavior.js";
import type { PgCodecMetaLookup } from "../inputUtils.js";
declare global {
    namespace GraphileBuild {
        type HasGraphQLTypeForPgCodec = (codec: PgCodec<any, any, any, any, any, any, any>, situation?: string) => boolean;
        type GetGraphQLTypeByPgCodec = (codec: PgCodec<any, any, any, any, any, any, any>, situation: string) => GraphQLType | null;
        type GetGraphQLTypeNameByPgCodec = (codec: PgCodec<any, any, any, any, any, any, any>, situation: string) => string | null;
        type SetGraphQLTypeForPgCodec = (codec: PgCodec<any, any, any, any, any, any, any>, situations: string | string[], typeName: string) => void;
        interface Build {
            /**
             * A store of metadata for given codecs. Currently internal as this API
             * may change.
             *
             * @internal
             */
            pgCodecMetaLookup: PgCodecMetaLookup;
            /**
             * Do we already have a GraphQL type to use for the given codec in the
             * given situation?
             */
            hasGraphQLTypeForPgCodec: HasGraphQLTypeForPgCodec;
            /**
             * Get the GraphQL type for the given codec in the given situation.
             */
            getGraphQLTypeByPgCodec: GetGraphQLTypeByPgCodec;
            /**
             * Get the GraphQL type name (string) for the given codec in the given
             * situation.
             */
            getGraphQLTypeNameByPgCodec: GetGraphQLTypeNameByPgCodec;
            /**
             * Set the GraphQL type to use for the given codec in the given
             * situation. If this has already been set, will throw an error.
             */
            setGraphQLTypeForPgCodec: SetGraphQLTypeForPgCodec;
            /**
             * pg-sql2 access on Build to avoid duplicate module issues.
             */
            sql: typeof sql;
            pgGetBehavior: typeof getBehavior;
        }
        interface BehaviorEntities {
            pgCodec: PgCodec;
            pgCodecAttribute: [codec: PgCodec, attribute: PgCodecAttribute];
            pgResource: PgResource<any, any, any, any, any>;
            pgResourceUnique: [
                resource: PgResource<any, any, any, any, any>,
                unique: PgResourceUnique
            ];
            pgCodecRelation: PgCodecRelation;
            pgCodecRef: PgCodecRef;
            pgRefDefinition: PgRefDefinition;
        }
    }
}
export declare const PgBasicsPlugin: GraphileConfig.Plugin;
//# sourceMappingURL=PgBasicsPlugin.d.ts.map