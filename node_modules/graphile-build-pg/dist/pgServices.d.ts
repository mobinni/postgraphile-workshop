import type { PgClient, WithPgClient } from "@dataplan/pg";
import type { PromiseOrDirect } from "grafast";
/**
 * Get or build the 'withPgClient' callback function for a given database
 * config, caching it to make future lookups faster.
 */
export declare function getWithPgClientFromPgService(config: GraphileConfig.PgServiceConfiguration): PromiseOrDirect<WithPgClient>;
export declare function withPgClientFromPgService<T>(config: GraphileConfig.PgServiceConfiguration, pgSettings: {
    [key: string]: string;
} | null, callback: (client: PgClient) => T | Promise<T>): Promise<T>;
export declare function withSuperuserPgClientFromPgService<T>(config: GraphileConfig.PgServiceConfiguration, pgSettings: {
    [key: string]: string;
} | null, callback: (client: PgClient) => T | Promise<T>): Promise<T>;
//# sourceMappingURL=pgServices.d.ts.map