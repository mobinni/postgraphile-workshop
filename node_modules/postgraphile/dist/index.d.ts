import "graphile-build-pg";
import type { PromiseOrDirect } from "grafast";
import type { GrafservBase, GrafservConfig } from "grafserv";
import type { SchemaResult } from "graphile-build";
import { makeSchema, watchSchema } from "graphile-build";
import type { GraphQLSchema } from "graphql";
export { makeSchema, watchSchema };
export { GraphileBuild, GraphileConfig };
export interface PostGraphileInstance {
    createServ<TGrafserv extends GrafservBase>(grafserv: (config: GrafservConfig) => TGrafserv): TGrafserv;
    getSchemaResult(): PromiseOrDirect<SchemaResult>;
    getSchema(): PromiseOrDirect<GraphQLSchema>;
    getResolvedPreset(): GraphileConfig.ResolvedPreset;
    release(): PromiseOrDirect<void>;
}
export declare function postgraphile(preset: GraphileConfig.Preset): PostGraphileInstance;
export default postgraphile;
//# sourceMappingURL=index.d.ts.map