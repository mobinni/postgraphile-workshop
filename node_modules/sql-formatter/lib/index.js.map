{"version":3,"file":"index.js","names":["supportedDialects","format","formatDialect","expandPhrases","ConfigError"],"sources":["../src/index.ts"],"sourcesContent":["export { supportedDialects, format, formatDialect } from './sqlFormatter.js';\nexport { expandPhrases } from './expandPhrases.js';\nexport { ConfigError } from './validateConfig.js';\n\n// Intentionally use \"export *\" syntax here to make sure when adding a new SQL dialect\n// we wouldn't forget to expose it in our public API.\nexport * from './allDialects.js';\n\n// NB! To re-export types the \"export type\" syntax is required by webpack.\n// Otherwise webpack build will fail.\nexport type {\n  SqlLanguage,\n  FormatOptionsWithLanguage,\n  FormatOptionsWithDialect,\n} from './sqlFormatter.js';\nexport type {\n  IndentStyle,\n  KeywordCase,\n  CommaPosition,\n  LogicalOperatorNewline,\n  FormatOptions,\n} from './FormatOptions.js';\nexport type { ParamItems } from './formatter/Params.js';\nexport type { ParamTypes } from './lexer/TokenizerOptions.js';\nexport type { DialectOptions } from './dialect.js';\n"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,MAA5B,EAAoCC,aAApC,QAAyD,mBAAzD;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,QAA4B,qBAA5B,C,CAEA;AACA;;AACA,cAAc,kBAAd,C,CAEA;AACA"}