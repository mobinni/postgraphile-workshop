{"version":3,"file":"Layout.js","names":["last","WS","Layout","items","constructor","indentation","add","item","SPACE","push","NO_SPACE","trimHorizontalWhitespace","NO_NEWLINE","trimWhitespace","NEWLINE","addNewline","MANDATORY_NEWLINE","INDENT","addIndentation","SINGLE_INDENT","isHorizontalWhitespace","pop","isRemovableWhitespace","newline","length","i","getLevel","toString","map","itemToString","join","getLayoutItems","getSingleIndent"],"sources":["../../src/formatter/Layout.ts"],"sourcesContent":["import { last } from '../utils.js';\n\nimport Indentation from './Indentation.js';\n\n/** Whitespace modifiers to be used with add() method */\nexport enum WS {\n  SPACE, // Adds single space\n  NO_SPACE, // Removes preceding horizontal whitespace (if any)\n  NO_NEWLINE, // Removes all preceding whitespace (whether horizontal or vertical)\n  NEWLINE, // Adds single newline (and removes any preceding whitespace)\n  MANDATORY_NEWLINE, // Adds single newline that can't be removed by NO_NEWLINE\n  INDENT, // Adds indentation (as much as needed for current indentation level)\n  SINGLE_INDENT, // Adds whitespace for single indentation step\n}\n\nexport type LayoutItem = WS.SPACE | WS.SINGLE_INDENT | WS.NEWLINE | WS.MANDATORY_NEWLINE | string;\n\n/**\n * API for constructing SQL string (especially the whitespace part).\n *\n * It hides the internal implementation.\n * Originally it used plain string concatenation, which was expensive.\n * Now it's storing items to array and builds the string only in the end.\n */\nexport default class Layout {\n  private items: LayoutItem[] = [];\n\n  constructor(public indentation: Indentation) {}\n\n  /**\n   * Appends token strings and whitespace modifications to SQL string.\n   */\n  public add(...items: (WS | string)[]) {\n    for (const item of items) {\n      switch (item) {\n        case WS.SPACE:\n          this.items.push(WS.SPACE);\n          break;\n        case WS.NO_SPACE:\n          this.trimHorizontalWhitespace();\n          break;\n        case WS.NO_NEWLINE:\n          this.trimWhitespace();\n          break;\n        case WS.NEWLINE:\n          this.trimHorizontalWhitespace();\n          this.addNewline(WS.NEWLINE);\n          break;\n        case WS.MANDATORY_NEWLINE:\n          this.trimHorizontalWhitespace();\n          this.addNewline(WS.MANDATORY_NEWLINE);\n          break;\n        case WS.INDENT:\n          this.addIndentation();\n          break;\n        case WS.SINGLE_INDENT:\n          this.items.push(WS.SINGLE_INDENT);\n          break;\n        default:\n          this.items.push(item);\n      }\n    }\n  }\n\n  private trimHorizontalWhitespace() {\n    while (isHorizontalWhitespace(last(this.items))) {\n      this.items.pop();\n    }\n  }\n\n  private trimWhitespace() {\n    while (isRemovableWhitespace(last(this.items))) {\n      this.items.pop();\n    }\n  }\n\n  private addNewline(newline: WS.NEWLINE | WS.MANDATORY_NEWLINE) {\n    if (this.items.length > 0) {\n      switch (last(this.items)) {\n        case WS.NEWLINE:\n          this.items.pop();\n          this.items.push(newline);\n          break;\n        case WS.MANDATORY_NEWLINE:\n          // keep as is\n          break;\n        default:\n          this.items.push(newline);\n          break;\n      }\n    }\n  }\n\n  private addIndentation() {\n    for (let i = 0; i < this.indentation.getLevel(); i++) {\n      this.items.push(WS.SINGLE_INDENT);\n    }\n  }\n\n  /**\n   * Returns the final SQL string.\n   */\n  public toString(): string {\n    return this.items.map(item => this.itemToString(item)).join('');\n  }\n\n  /**\n   * Returns the internal layout data\n   */\n  public getLayoutItems(): LayoutItem[] {\n    return this.items;\n  }\n\n  private itemToString(item: LayoutItem): string {\n    switch (item) {\n      case WS.SPACE:\n        return ' ';\n      case WS.NEWLINE:\n      case WS.MANDATORY_NEWLINE:\n        return '\\n';\n      case WS.SINGLE_INDENT:\n        return this.indentation.getSingleIndent();\n      default:\n        return item;\n    }\n  }\n}\n\nconst isHorizontalWhitespace = (item: WS | string | undefined) =>\n  item === WS.SPACE || item === WS.SINGLE_INDENT;\n\nconst isRemovableWhitespace = (item: WS | string | undefined) =>\n  item === WS.SPACE || item === WS.SINGLE_INDENT || item === WS.NEWLINE;\n"],"mappings":"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"}