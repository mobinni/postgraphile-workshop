{"version":3,"file":"trino.formatter.js","names":["expandPhrases","functions","keywords","reservedSelect","reservedClauses","onelineClauses","reservedSetOperations","reservedJoins","reservedPhrases","trino","tokenizerOptions","reservedKeywords","reservedFunctionNames","extraParens","stringTypes","quote","prefixes","requirePrefix","identTypes","paramTypes","positional","operators","formatOptions"],"sources":["../../../src/languages/trino/trino.formatter.ts"],"sourcesContent":["import { DialectOptions } from '../../dialect.js';\nimport { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './trino.functions.js';\nimport { keywords } from './trino.keywords.js';\n\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\n\n// https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L41\nconst reservedClauses = expandPhrases([\n  // queries\n  'WITH [RECURSIVE]',\n  'FROM',\n  'WHERE',\n  'GROUP BY [ALL | DISTINCT]',\n  'HAVING',\n  'WINDOW',\n  'PARTITION BY',\n  'ORDER BY',\n  'LIMIT',\n  'OFFSET',\n  'FETCH {FIRST | NEXT}',\n  // Data manipulation\n  // - insert:\n  'INSERT INTO',\n  'VALUES',\n  // - update:\n  'SET',\n  // Data definition\n  'CREATE [OR REPLACE] [MATERIALIZED] VIEW',\n  'CREATE TABLE [IF NOT EXISTS]',\n  // MATCH_RECOGNIZE\n  'MATCH_RECOGNIZE',\n  'MEASURES',\n  'ONE ROW PER MATCH',\n  'ALL ROWS PER MATCH',\n  'AFTER MATCH',\n  'PATTERN',\n  'SUBSET',\n  'DEFINE',\n]);\n\nconst onelineClauses = expandPhrases([\n  // - update:\n  'UPDATE',\n  // - delete:\n  'DELETE FROM',\n  // - drop table:\n  'DROP TABLE [IF EXISTS]',\n  // - alter table:\n  'ALTER TABLE [IF EXISTS]',\n  'ADD COLUMN [IF NOT EXISTS]',\n  'DROP COLUMN [IF EXISTS]',\n  'RENAME COLUMN [IF EXISTS]',\n  'RENAME TO',\n  'SET AUTHORIZATION [USER | ROLE]',\n  'SET PROPERTIES',\n  'EXECUTE',\n  // - truncate:\n  'TRUNCATE TABLE',\n\n  // other\n  'ALTER SCHEMA',\n  'ALTER MATERIALIZED VIEW',\n  'ALTER VIEW',\n  'CREATE SCHEMA',\n  'CREATE ROLE',\n  'DROP SCHEMA',\n  'DROP MATERIALIZED VIEW',\n  'DROP VIEW',\n  'DROP ROLE',\n  // Auxiliary\n  'EXPLAIN',\n  'ANALYZE',\n  'EXPLAIN ANALYZE',\n  'EXPLAIN ANALYZE VERBOSE',\n  'USE',\n\n  'COMMENT ON TABLE',\n  'COMMENT ON COLUMN',\n  'DESCRIBE INPUT',\n  'DESCRIBE OUTPUT',\n\n  'REFRESH MATERIALIZED VIEW',\n  'RESET SESSION',\n  'SET SESSION',\n  'SET PATH',\n  'SET TIME ZONE',\n\n  'SHOW GRANTS',\n  'SHOW CREATE TABLE',\n  'SHOW CREATE SCHEMA',\n  'SHOW CREATE VIEW',\n  'SHOW CREATE MATERIALIZED VIEW',\n  'SHOW TABLES',\n  'SHOW SCHEMAS',\n  'SHOW CATALOGS',\n  'SHOW COLUMNS',\n  'SHOW STATS FOR',\n  'SHOW ROLES',\n  'SHOW CURRENT ROLES',\n  'SHOW ROLE GRANTS',\n  'SHOW FUNCTIONS',\n  'SHOW SESSION',\n]);\n\n// https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L231-L235\n// https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L288-L291\nconst reservedSetOperations = expandPhrases([\n  'UNION [ALL | DISTINCT]',\n  'EXCEPT [ALL | DISTINCT]',\n  'INTERSECT [ALL | DISTINCT]',\n]);\n\n// https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L299-L313\nconst reservedJoins = expandPhrases([\n  'JOIN',\n  '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n  '{INNER | CROSS} JOIN',\n  'NATURAL [INNER] JOIN',\n  'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN',\n]);\n\nconst reservedPhrases = expandPhrases([\n  '{ROWS | RANGE | GROUPS} BETWEEN',\n  // comparison operator\n  'IS [NOT] DISTINCT FROM',\n]);\n\nexport const trino: DialectOptions = {\n  tokenizerOptions: {\n    reservedSelect,\n    reservedClauses: [...reservedClauses, ...onelineClauses],\n    reservedSetOperations,\n    reservedJoins,\n    reservedPhrases,\n    reservedKeywords: keywords,\n    reservedFunctionNames: functions,\n    // Trino also supports {- ... -} parenthesis.\n    // The formatting of these currently works out as a result of { and -\n    // not getting a space added in-between.\n    // https://trino.io/docs/current/sql/match-recognize.html#row-pattern-syntax\n    extraParens: ['[]', '{}'],\n    // https://trino.io/docs/current/language/types.html#string\n    // https://trino.io/docs/current/language/types.html#varbinary\n    stringTypes: [\n      { quote: \"''-qq\", prefixes: ['U&'] },\n      { quote: \"''-raw\", prefixes: ['X'], requirePrefix: true },\n    ],\n    // https://trino.io/docs/current/language/reserved.html\n    identTypes: ['\"\"-qq'],\n    paramTypes: { positional: true },\n    operators: [\n      '%',\n      '->',\n      '=>',\n      ':',\n      '||',\n      // Row pattern syntax\n      '|',\n      '^',\n      '$',\n      // '?', conflicts with positional placeholders\n    ],\n  },\n  formatOptions: {\n    onelineClauses,\n  },\n};\n"],"mappings":"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"}