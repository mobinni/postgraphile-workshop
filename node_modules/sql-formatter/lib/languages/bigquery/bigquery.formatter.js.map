{"version":3,"file":"bigquery.formatter.js","names":["EOF_TOKEN","isToken","TokenType","expandPhrases","keywords","functions","reservedSelect","reservedClauses","onelineClauses","reservedSetOperations","reservedJoins","reservedPhrases","bigquery","tokenizerOptions","reservedKeywords","reservedFunctionNames","extraParens","stringTypes","quote","prefixes","requirePrefix","identTypes","identChars","dashes","paramTypes","positional","named","quoted","variableTypes","regex","String","raw","lineCommentTypes","operators","postProcess","formatOptions","tokens","detectArraySubscripts","combineParameterizedTypes","prevToken","map","token","text","type","RESERVED_FUNCTION_NAME","processed","i","length","ARRAY","STRUCT","endIndex","findClosingAngleBracketIndex","typeDefTokens","slice","push","IDENTIFIER","formatTypeDefToken","join","start","key","COMMA","startIndex","level"],"sources":["../../../src/languages/bigquery/bigquery.formatter.ts"],"sourcesContent":["import { DialectOptions } from '../../dialect.js';\nimport { EOF_TOKEN, isToken, TokenType, Token } from '../../lexer/token.js';\nimport { expandPhrases } from '../../expandPhrases.js';\nimport { keywords } from './bigquery.keywords.js';\nimport { functions } from './bigquery.functions.js';\n\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT] [AS STRUCT | AS VALUE]']);\n\nconst reservedClauses = expandPhrases([\n  // Queries: https://cloud.google.com/bigquery/docs/reference/standard-sql/query-syntax\n  'WITH [RECURSIVE]',\n  'FROM',\n  'WHERE',\n  'GROUP BY',\n  'HAVING',\n  'QUALIFY',\n  'WINDOW',\n  'PARTITION BY',\n  'ORDER BY',\n  'LIMIT',\n  'OFFSET',\n  'OMIT RECORD IF', // legacy\n  // Data modification: https://cloud.google.com/bigquery/docs/reference/standard-sql/dml-syntax\n  // - insert:\n  'INSERT [INTO]',\n  'VALUES',\n  // - update:\n  'SET',\n  // - merge:\n  'MERGE [INTO]',\n  'WHEN [NOT] MATCHED [BY SOURCE | BY TARGET] [THEN]',\n  'UPDATE SET',\n  // Data definition, https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language\n  'CREATE [OR REPLACE] [MATERIALIZED] VIEW [IF NOT EXISTS]',\n  'CREATE [OR REPLACE] [TEMP|TEMPORARY|SNAPSHOT|EXTERNAL] TABLE [IF NOT EXISTS]',\n\n  'CLUSTER BY',\n  'FOR SYSTEM_TIME AS OF', // CREATE SNAPSHOT TABLE\n  'WITH CONNECTION',\n  'WITH PARTITION COLUMNS',\n  'REMOTE WITH CONNECTION',\n]);\n\nconst onelineClauses = expandPhrases([\n  // - update:\n  'UPDATE',\n  // - delete:\n  'DELETE [FROM]',\n  // - drop table:\n  'DROP [SNAPSHOT | EXTERNAL] TABLE [IF EXISTS]',\n  // - alter table:\n  'ALTER TABLE [IF EXISTS]',\n  'ADD COLUMN [IF NOT EXISTS]',\n  'DROP COLUMN [IF EXISTS]',\n  'RENAME TO',\n  'ALTER COLUMN [IF EXISTS]',\n  'SET DEFAULT COLLATE', // for alter column\n  'SET OPTIONS', // for alter column\n  'DROP NOT NULL', // for alter column\n  'SET DATA TYPE', // for alter column\n  // - alter schema\n  'ALTER SCHEMA [IF EXISTS]',\n  // - alter view\n  'ALTER [MATERIALIZED] VIEW [IF EXISTS]',\n  // - alter bi_capacity\n  'ALTER BI_CAPACITY',\n  // - truncate:\n  'TRUNCATE TABLE',\n  // - create schema\n  'CREATE SCHEMA [IF NOT EXISTS]',\n  'DEFAULT COLLATE',\n\n  // stored procedures\n  'CREATE [OR REPLACE] [TEMP|TEMPORARY|TABLE] FUNCTION [IF NOT EXISTS]',\n  'CREATE [OR REPLACE] PROCEDURE [IF NOT EXISTS]',\n  // row access policy\n  'CREATE [OR REPLACE] ROW ACCESS POLICY [IF NOT EXISTS]',\n  'GRANT TO',\n  'FILTER USING',\n  // capacity\n  'CREATE CAPACITY',\n  'AS JSON',\n  // reservation\n  'CREATE RESERVATION',\n  // assignment\n  'CREATE ASSIGNMENT',\n  // search index\n  'CREATE SEARCH INDEX [IF NOT EXISTS]',\n  // drop\n  'DROP SCHEMA [IF EXISTS]',\n  'DROP [MATERIALIZED] VIEW [IF EXISTS]',\n  'DROP [TABLE] FUNCTION [IF EXISTS]',\n  'DROP PROCEDURE [IF EXISTS]',\n  'DROP ROW ACCESS POLICY',\n  'DROP ALL ROW ACCESS POLICIES',\n  'DROP CAPACITY [IF EXISTS]',\n  'DROP RESERVATION [IF EXISTS]',\n  'DROP ASSIGNMENT [IF EXISTS]',\n  'DROP SEARCH INDEX [IF EXISTS]',\n  'DROP [IF EXISTS]',\n  // DCL, https://cloud.google.com/bigquery/docs/reference/standard-sql/data-control-language\n  'GRANT',\n  'REVOKE',\n  // Script, https://cloud.google.com/bigquery/docs/reference/standard-sql/scripting\n  'DECLARE',\n  'EXECUTE IMMEDIATE',\n  'LOOP',\n  'END LOOP',\n  'REPEAT',\n  'END REPEAT',\n  'WHILE',\n  'END WHILE',\n  'BREAK',\n  'LEAVE',\n  'CONTINUE',\n  'ITERATE',\n  'FOR',\n  'END FOR',\n  'BEGIN',\n  'BEGIN TRANSACTION',\n  'COMMIT TRANSACTION',\n  'ROLLBACK TRANSACTION',\n  'RAISE',\n  'RETURN',\n  'CALL',\n  // Debug, https://cloud.google.com/bigquery/docs/reference/standard-sql/debugging-statements\n  'ASSERT',\n  // Other, https://cloud.google.com/bigquery/docs/reference/standard-sql/other-statements\n  'EXPORT DATA',\n]);\n\nconst reservedSetOperations = expandPhrases([\n  'UNION {ALL | DISTINCT}',\n  'EXCEPT DISTINCT',\n  'INTERSECT DISTINCT',\n]);\n\nconst reservedJoins = expandPhrases([\n  'JOIN',\n  '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n  '{INNER | CROSS} JOIN',\n]);\n\nconst reservedPhrases = expandPhrases([\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/query-syntax#tablesample_operator\n  'TABLESAMPLE SYSTEM',\n  // From DDL: https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language\n  'ANY TYPE',\n  'ALL COLUMNS',\n  'NOT DETERMINISTIC',\n  // inside window definitions\n  '{ROWS | RANGE} BETWEEN',\n  // comparison operator\n  'IS [NOT] DISTINCT FROM',\n]);\n\n// https://cloud.google.com/bigquery/docs/reference/#standard-sql-reference\nexport const bigquery: DialectOptions = {\n  tokenizerOptions: {\n    reservedSelect,\n    reservedClauses: [...reservedClauses, ...onelineClauses],\n    reservedSetOperations,\n    reservedJoins,\n    reservedPhrases,\n    reservedKeywords: keywords,\n    reservedFunctionNames: functions,\n    extraParens: ['[]'],\n    stringTypes: [\n      // The triple-quoted strings are listed first, so they get matched first.\n      // Otherwise the first two quotes of \"\"\" will get matched as an empty \"\" string.\n      { quote: '\"\"\"..\"\"\"', prefixes: ['R', 'B', 'RB', 'BR'] },\n      { quote: \"'''..'''\", prefixes: ['R', 'B', 'RB', 'BR'] },\n      '\"\"-bs',\n      \"''-bs\",\n      { quote: '\"\"-raw', prefixes: ['R', 'B', 'RB', 'BR'], requirePrefix: true },\n      { quote: \"''-raw\", prefixes: ['R', 'B', 'RB', 'BR'], requirePrefix: true },\n    ],\n    identTypes: ['``'],\n    identChars: { dashes: true },\n    paramTypes: { positional: true, named: ['@'], quoted: ['@'] },\n    variableTypes: [{ regex: String.raw`@@\\w+` }],\n    lineCommentTypes: ['--', '#'],\n    operators: ['&', '|', '^', '~', '>>', '<<', '||', '=>'],\n    postProcess,\n  },\n  formatOptions: {\n    onelineClauses,\n  },\n};\n\nfunction postProcess(tokens: Token[]): Token[] {\n  return detectArraySubscripts(combineParameterizedTypes(tokens));\n}\n\n// Converts OFFSET token inside array from RESERVED_CLAUSE to RESERVED_FUNCTION_NAME\n// See: https://cloud.google.com/bigquery/docs/reference/standard-sql/functions-and-operators#array_subscript_operator\nfunction detectArraySubscripts(tokens: Token[]) {\n  let prevToken = EOF_TOKEN;\n  return tokens.map(token => {\n    if (token.text === 'OFFSET' && prevToken.text === '[') {\n      prevToken = token;\n      return { ...token, type: TokenType.RESERVED_FUNCTION_NAME };\n    } else {\n      prevToken = token;\n      return token;\n    }\n  });\n}\n\n// Combines multiple tokens forming a parameterized type like STRUCT<ARRAY<INT64>> into a single token\nfunction combineParameterizedTypes(tokens: Token[]) {\n  const processed: Token[] = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n\n    if ((isToken.ARRAY(token) || isToken.STRUCT(token)) && tokens[i + 1]?.text === '<') {\n      const endIndex = findClosingAngleBracketIndex(tokens, i + 1);\n      const typeDefTokens = tokens.slice(i, endIndex + 1);\n      processed.push({\n        type: TokenType.IDENTIFIER,\n        raw: typeDefTokens.map(formatTypeDefToken('raw')).join(''),\n        text: typeDefTokens.map(formatTypeDefToken('text')).join(''),\n        start: token.start,\n      });\n      i = endIndex;\n    } else {\n      processed.push(token);\n    }\n  }\n  return processed;\n}\n\nconst formatTypeDefToken =\n  (key: Extract<keyof Token, 'raw' | 'text'>) =>\n  (token: Token): string => {\n    if (token.type === TokenType.IDENTIFIER || token.type === TokenType.COMMA) {\n      return token[key] + ' ';\n    } else {\n      return token[key];\n    }\n  };\n\nfunction findClosingAngleBracketIndex(tokens: Token[], startIndex: number): number {\n  let level = 0;\n  for (let i = startIndex; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.text === '<') {\n      level++;\n    } else if (token.text === '>') {\n      level--;\n    } else if (token.text === '>>') {\n      level -= 2;\n    }\n    if (level === 0) {\n      return i;\n    }\n  }\n  return tokens.length - 1;\n}\n"],"mappings":"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"}