import type { ExecutableStep, ListCapableStep } from "../step.js";
import { __ItemStep } from "./__item.js";
import type { ConnectionCapableStep } from "./connection.js";
import type { __ListTransformStep } from "./listTransform.js";
export declare function each<TListStep extends ExecutableStep<readonly any[]> & Partial<ConnectionCapableStep<any, any>>, TResultItemStep extends ExecutableStep>(listStep: TListStep, mapper: (itemPlan: TListStep extends ListCapableStep<any, any> ? ReturnType<TListStep["listItem"]> : __ItemStep<any>) => TResultItemStep): __ListTransformStep<any, any, any, any>;
//# sourceMappingURL=each.d.ts.map