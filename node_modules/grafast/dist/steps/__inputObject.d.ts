import type { GraphQLInputObjectType } from "graphql";
import type { ExecutionExtra, InputStep, NotVariableValueNode } from "../interfaces.js";
import { UnbatchedExecutableStep } from "../step.js";
export declare class __InputObjectStep<TInputType extends GraphQLInputObjectType = GraphQLInputObjectType> extends UnbatchedExecutableStep {
    private inputObjectType;
    private inputValues;
    static $$export: {
        moduleName: string;
        exportName: string;
    };
    isSyncAndSafe: boolean;
    private inputFields;
    constructor(inputObjectType: TInputType, inputValues: NotVariableValueNode | undefined);
    optimize(): this | import("./constant.js").ConstantStep<null>;
    finalize(): void;
    unbatchedExecute(_extra: ExecutionExtra, ...values: any[]): any;
    get(attrName: string): InputStep;
    eval(): any;
    evalIs(value: null | undefined | 0): boolean;
    evalIsEmpty(): boolean;
    evalHas(attrName: string): boolean;
}
export type __InputObjectStepWithDollars<TInputType extends GraphQLInputObjectType = GraphQLInputObjectType> = __InputObjectStep<TInputType> & {
    [key in keyof ReturnType<TInputType["getFields"]> & string as `$${key}`]: InputStep<ReturnType<TInputType["getFields"]>[key]["type"]>;
};
//# sourceMappingURL=__inputObject.d.ts.map