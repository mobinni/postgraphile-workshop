import type { ExecutionExtra, GrafastResultsList, GrafastValuesList } from "../interfaces.js";
import type { ExecutableStep } from "../step.js";
import { UnbatchedExecutableStep } from "../step.js";
export declare class FirstStep<TData> extends UnbatchedExecutableStep<TData> {
    static $$export: {
        moduleName: string;
        exportName: string;
    };
    isSyncAndSafe: boolean;
    allowMultipleOptimizations: boolean;
    constructor(parentPlan: ExecutableStep<ReadonlyArray<TData>>);
    execute(count: number, values: GrafastValuesList<[ReadonlyArray<TData>]>): GrafastResultsList<TData>;
    unbatchedExecute(_extra: ExecutionExtra, list: any[]): any;
    deduplicate(peers: FirstStep<TData>[]): FirstStep<TData>[];
    optimize(): ExecutableStep<any> | this;
}
export declare function first<TData>(plan: ExecutableStep<ReadonlyArray<TData>>): FirstStep<TData>;
//# sourceMappingURL=first.d.ts.map