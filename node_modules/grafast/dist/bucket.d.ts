import type { LayerPlan } from "./engine/LayerPlan";
import type { MetaByMetaKey } from "./engine/OperationPlan";
import type { ExecutionEventEmitter } from "./interfaces.js";
export interface RequestTools {
    startTime: number;
    stopTime: number | null;
    readonly eventEmitter: ExecutionEventEmitter | undefined;
    metaByMetaKey: MetaByMetaKey;
    insideGraphQL: false;
}
export interface Bucket {
    layerPlan: LayerPlan;
    size: number;
    polymorphicPathList: readonly (string | null)[];
    store: Map<number, any[]>;
    isComplete: boolean;
    hasErrors: boolean;
    children: {
        [layerPlanId: number]: {
            bucket: Bucket;
            map: Map<number, number | number[]>;
        };
    };
}
//# sourceMappingURL=bucket.d.ts.map