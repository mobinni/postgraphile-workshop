import type { ExecutableStep } from "grafast";
import { BaseStep } from "grafast";
import type { SQL } from "pg-sql2";
import type { PgResource } from "../datasource.js";
import type { ClassFilterStep } from "../filters/classFilter.js";
import type { PgCodec } from "../interfaces.js";
import type { PgConditionCapableParentStep } from "./pgCondition.js";
import { PgConditionStep } from "./pgCondition.js";
export declare class TempTableStep<TResource extends PgResource<any, any, any, any, any>> extends BaseStep implements PgConditionCapableParentStep {
    readonly $parent: ClassFilterStep;
    readonly resource: TResource;
    static $$export: {
        moduleName: string;
        exportName: string;
    };
    readonly alias: SQL;
    readonly conditions: SQL[];
    constructor($parent: ClassFilterStep, resource: TResource);
    placeholder($step: ExecutableStep, codec: PgCodec): SQL;
    where(condition: SQL): void;
    wherePlan(): PgConditionStep<this>;
    fromExpression(): SQL;
}
//# sourceMappingURL=tempTable.d.ts.map