import type { ExecutableStep, GrafastResultsList, PageInfoCapableStep } from "grafast";
import { ConnectionStep, UnbatchedExecutableStep } from "grafast";
import type { PgCursorStep } from "./pgCursor.js";
import type { PgSelectParsedCursorStep, PgSelectStep } from "./pgSelect.js";
import type { PgSelectSingleStep } from "./pgSelectSingle.js";
import type { PgUnionAllSingleStep, PgUnionAllStep } from "./pgUnionAll.js";
export declare class PgPageInfoStep<TStep extends PgSelectStep<any> | PgUnionAllStep<any, any>> extends UnbatchedExecutableStep<any> implements PageInfoCapableStep {
    static $$export: {
        moduleName: string;
        exportName: string;
    };
    isSyncAndSafe: boolean;
    private connectionStepId;
    constructor(connectionPlan: ConnectionStep<any, PgSelectParsedCursorStep, TStep, any>);
    getConnectionStep(): ConnectionStep<any, PgSelectParsedCursorStep, TStep, any>;
    hasNextPage(): ExecutableStep<boolean>;
    hasPreviousPage(): ExecutableStep<boolean>;
    startCursor(): PgCursorStep<PgSelectSingleStep<any> | PgUnionAllSingleStep>;
    endCursor(): PgCursorStep<PgSelectSingleStep<any> | PgUnionAllSingleStep>;
    execute(count: number): GrafastResultsList<object>;
    unbatchedExecute(): any;
}
export declare function pgPageInfo<TStep extends PgSelectStep<any> | PgUnionAllStep<any, any>>(connectionPlan: ConnectionStep<any, PgSelectParsedCursorStep, TStep, any>): PgPageInfoStep<TStep>;
//# sourceMappingURL=pgPageInfo.d.ts.map